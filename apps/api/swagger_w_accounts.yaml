swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          type: object
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          type: object
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          type: object
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/account:
    post:
      security:
        - Bearer: []
      tags:
        - Account
      summary: User Account API
      description: API for fetching a user account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User account retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Account
      summary: User Account API
      description: API for updating a user account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          type: object
          description: Update user account attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User account retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transaction:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: User Transaction API
      description: API for fetching a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: query
          name: limit
          type: integer
          required: false
          description: Maximum number of transactions to return (e.g., 200)
        - in: query
          name: from
          type: string
          format: date
          required: false
          description: Start date for transaction filtering (YYYY-MM-DD)
        - in: query
          name: to
          type: string
          format: date
          required: false
          description: End date for transaction filtering (YYYY-MM-DD)
      produces:
        - application/json
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Bad Request – invalid query parameters
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                enum:
                  - Invalid date format. Expected format is YYYY-MM-DD.
                  - Invalid date range: \'from\' must be earlier than \'to\'.
                  - One or more parameters are invalid.
        "401":
          description: Unprocessable date out of allowed range
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 401
              message:
                type: string
                example: Date out of allowed range. You can only query data within the last 12 months.
        "500":
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              message:
                type: string
                example: An unexpected error occurred.
    put:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: User Transaction API
      description: API for updating a user account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          type: object
          description: Update transaction attributes
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Delete a transaction
      description: API for deleting a transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: query
          name: transactionId
          type: string
          required: true
          description: ID of the transaction to delete
      produces:
        - application/json
      responses:
        "200":
          description: Transaction deleted successfully
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: Transaction successfully deleted.
        "400":
          description: Bad Request – missing or invalid transaction ID
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: Invalid or missing transaction ID.
        "404":
          description: Not Found – transaction does not exist
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: Transaction not found.
        "500":
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              message:
                type: string
                example: An unexpected error occurred.
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Account:
    properties:
      id:
        type: string
        description: account id
      number:
        type: string
        description: account number
      type:
        type: string
        description: account type
  Transaction:
    properties:
      id:
        type: string
        description: transaction id
      account_id:
        type: string
        description: account id
      date:
        type: object
        description: transaction date
      description:
        type: string
        description: transaction description
      amount:
        type: number
        description: transaction amount
      balance:
        type: number
        description: transaction last balance
      type:
        type: array
        description: transaction type
      category:
        type: string
        description: transaction category
      notes:
        type: string
        description: transaction notes
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
